// Code generated by "stringer -type=actionType"; DO NOT EDIT.

package fzf

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[actIgnore-0]
	_ = x[actStart-1]
	_ = x[actClick-2]
	_ = x[actInvalid-3]
	_ = x[actChar-4]
	_ = x[actMouse-5]
	_ = x[actBeginningOfLine-6]
	_ = x[actAbort-7]
	_ = x[actAccept-8]
	_ = x[actAcceptNonEmpty-9]
	_ = x[actAcceptOrPrintQuery-10]
	_ = x[actBackwardChar-11]
	_ = x[actBackwardDeleteChar-12]
	_ = x[actBackwardDeleteCharEof-13]
	_ = x[actBackwardWord-14]
	_ = x[actCancel-15]
	_ = x[actChangeBorderLabel-16]
	_ = x[actChangeListLabel-17]
	_ = x[actChangeHeader-18]
	_ = x[actChangeMulti-19]
	_ = x[actChangePreviewLabel-20]
	_ = x[actChangePrompt-21]
	_ = x[actChangeQuery-22]
	_ = x[actClearScreen-23]
	_ = x[actClearQuery-24]
	_ = x[actClearSelection-25]
	_ = x[actClose-26]
	_ = x[actDeleteChar-27]
	_ = x[actDeleteCharEof-28]
	_ = x[actEndOfLine-29]
	_ = x[actFatal-30]
	_ = x[actForwardChar-31]
	_ = x[actForwardWord-32]
	_ = x[actKillLine-33]
	_ = x[actKillWord-34]
	_ = x[actUnixLineDiscard-35]
	_ = x[actUnixWordRubout-36]
	_ = x[actYank-37]
	_ = x[actBackwardKillWord-38]
	_ = x[actSelectAll-39]
	_ = x[actDeselectAll-40]
	_ = x[actToggle-41]
	_ = x[actToggleSearch-42]
	_ = x[actToggleAll-43]
	_ = x[actToggleDown-44]
	_ = x[actToggleUp-45]
	_ = x[actToggleIn-46]
	_ = x[actToggleOut-47]
	_ = x[actToggleTrack-48]
	_ = x[actToggleTrackCurrent-49]
	_ = x[actToggleHeader-50]
	_ = x[actToggleWrap-51]
	_ = x[actToggleMultiLine-52]
	_ = x[actToggleHscroll-53]
	_ = x[actTrackCurrent-54]
	_ = x[actUntrackCurrent-55]
	_ = x[actDown-56]
	_ = x[actUp-57]
	_ = x[actPageUp-58]
	_ = x[actPageDown-59]
	_ = x[actPosition-60]
	_ = x[actHalfPageUp-61]
	_ = x[actHalfPageDown-62]
	_ = x[actOffsetUp-63]
	_ = x[actOffsetDown-64]
	_ = x[actOffsetMiddle-65]
	_ = x[actJump-66]
	_ = x[actJumpAccept-67]
	_ = x[actPrintQuery-68]
	_ = x[actRefreshPreview-69]
	_ = x[actReplaceQuery-70]
	_ = x[actToggleSort-71]
	_ = x[actShowPreview-72]
	_ = x[actHidePreview-73]
	_ = x[actTogglePreview-74]
	_ = x[actTogglePreviewWrap-75]
	_ = x[actTransform-76]
	_ = x[actTransformBorderLabel-77]
	_ = x[actTransformListLabel-78]
	_ = x[actTransformHeader-79]
	_ = x[actTransformPreviewLabel-80]
	_ = x[actTransformPrompt-81]
	_ = x[actTransformQuery-82]
	_ = x[actPreview-83]
	_ = x[actChangePreview-84]
	_ = x[actChangePreviewWindow-85]
	_ = x[actPreviewTop-86]
	_ = x[actPreviewBottom-87]
	_ = x[actPreviewUp-88]
	_ = x[actPreviewDown-89]
	_ = x[actPreviewPageUp-90]
	_ = x[actPreviewPageDown-91]
	_ = x[actPreviewHalfPageUp-92]
	_ = x[actPreviewHalfPageDown-93]
	_ = x[actPrevHistory-94]
	_ = x[actPrevSelected-95]
	_ = x[actPrint-96]
	_ = x[actPut-97]
	_ = x[actNextHistory-98]
	_ = x[actNextSelected-99]
	_ = x[actExecute-100]
	_ = x[actExecuteSilent-101]
	_ = x[actExecuteMulti-102]
	_ = x[actSigStop-103]
	_ = x[actFirst-104]
	_ = x[actLast-105]
	_ = x[actReload-106]
	_ = x[actReloadSync-107]
	_ = x[actDisableSearch-108]
	_ = x[actEnableSearch-109]
	_ = x[actSelect-110]
	_ = x[actDeselect-111]
	_ = x[actUnbind-112]
	_ = x[actRebind-113]
	_ = x[actBecome-114]
	_ = x[actShowHeader-115]
	_ = x[actHideHeader-116]
}

const _actionType_name = "actIgnoreactStartactClickactInvalidactCharactMouseactBeginningOfLineactAbortactAcceptactAcceptNonEmptyactAcceptOrPrintQueryactBackwardCharactBackwardDeleteCharactBackwardDeleteCharEofactBackwardWordactCancelactChangeBorderLabelactChangeListLabelactChangeHeaderactChangeMultiactChangePreviewLabelactChangePromptactChangeQueryactClearScreenactClearQueryactClearSelectionactCloseactDeleteCharactDeleteCharEofactEndOfLineactFatalactForwardCharactForwardWordactKillLineactKillWordactUnixLineDiscardactUnixWordRuboutactYankactBackwardKillWordactSelectAllactDeselectAllactToggleactToggleSearchactToggleAllactToggleDownactToggleUpactToggleInactToggleOutactToggleTrackactToggleTrackCurrentactToggleHeaderactToggleWrapactToggleMultiLineactToggleHscrollactTrackCurrentactUntrackCurrentactDownactUpactPageUpactPageDownactPositionactHalfPageUpactHalfPageDownactOffsetUpactOffsetDownactOffsetMiddleactJumpactJumpAcceptactPrintQueryactRefreshPreviewactReplaceQueryactToggleSortactShowPreviewactHidePreviewactTogglePreviewactTogglePreviewWrapactTransformactTransformBorderLabelactTransformListLabelactTransformHeaderactTransformPreviewLabelactTransformPromptactTransformQueryactPreviewactChangePreviewactChangePreviewWindowactPreviewTopactPreviewBottomactPreviewUpactPreviewDownactPreviewPageUpactPreviewPageDownactPreviewHalfPageUpactPreviewHalfPageDownactPrevHistoryactPrevSelectedactPrintactPutactNextHistoryactNextSelectedactExecuteactExecuteSilentactExecuteMultiactSigStopactFirstactLastactReloadactReloadSyncactDisableSearchactEnableSearchactSelectactDeselectactUnbindactRebindactBecomeactShowHeaderactHideHeader"

var _actionType_index = [...]uint16{0, 9, 17, 25, 35, 42, 50, 68, 76, 85, 102, 123, 138, 159, 183, 198, 207, 227, 245, 260, 274, 295, 310, 324, 338, 351, 368, 376, 389, 405, 417, 425, 439, 453, 464, 475, 493, 510, 517, 536, 548, 562, 571, 586, 598, 611, 622, 633, 645, 659, 680, 695, 708, 726, 742, 757, 774, 781, 786, 795, 806, 817, 830, 845, 856, 869, 884, 891, 904, 917, 934, 949, 962, 976, 990, 1006, 1026, 1038, 1061, 1082, 1100, 1124, 1142, 1159, 1169, 1185, 1207, 1220, 1236, 1248, 1262, 1278, 1296, 1316, 1338, 1352, 1367, 1375, 1381, 1395, 1410, 1420, 1436, 1451, 1461, 1469, 1476, 1485, 1498, 1514, 1529, 1538, 1549, 1558, 1567, 1576, 1589, 1602}

func (i actionType) String() string {
	if i < 0 || i >= actionType(len(_actionType_index)-1) {
		return "actionType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _actionType_name[_actionType_index[i]:_actionType_index[i+1]]
}
